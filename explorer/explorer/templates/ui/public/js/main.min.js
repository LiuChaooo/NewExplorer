/*! insight-ui 5.0.0-beta.12 */

function _setCookie(cname,isoCode){var expires="",name=cname,value=isoCode,date=new Date;date.setTime(date.getTime()+31536e6),expires="; expires="+date.toUTCString(),document.cookie=name+"="+value+expires+"; path=/"}function _getCookie(cname){for(var name=cname+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(var c=ca[i];" "==c.charAt(0);)c=c.substring(1);if(-1!=c.indexOf(name))return c.substring(name.length,c.length)}return""}function _getDefaultLanguage(){var language=localStorage.getItem("insight-language");return language||((language=_getCookie("language"))||((language=window.navigator.language).includes("zh")&&(language="zh_CN"),_setCookie("language",language)),language)}var defaultLanguage=_getDefaultLanguage(),defaultCurrency=localStorage.getItem("insight-currency")||"New";angular.module("insight",["ngAnimate","ngResource","ngRoute","ngProgress","ui.bootstrap","ui.route","monospaced.qrcode","gettext","angularMoment","insight.system","insight.socket","insight.api","insight.blocks","insight.transactions","insight.address","insight.search","insight.status","insight.rank","insight.connection","insight.currency","insight.messages","insight.contracts"]),angular.module("insight.system",[]),angular.module("insight.socket",[]),angular.module("insight.api",[]),angular.module("insight.blocks",[]),angular.module("insight.transactions",[]),angular.module("insight.address",[]),angular.module("insight.search",[]),angular.module("insight.status",[]),angular.module("insight.connection",[]),angular.module("insight.currency",[]),angular.module("insight.messages",[]),angular.module("insight.rank",[]),angular.module("insight.contracts",[]),angular.module("insight.address").controller("AddressController",function($scope,$rootScope,$routeParams,$location,Global,Address,getSocket){$scope.global=Global;$routeParams.addrStr;function scientificToNumber(value,sat){if(!value)return(sat/1e8).toString();var tmp=value.toString();if(tmp.includes("e")||tmp.includes("E")){for(var res=tmp.split("e-")||tmp.split("E-"),precision=parseInt(res[1])-1,zero="",num=sat.toString(),i=0;i<precision;i++)zero+="0";return value="0."+zero+num}return value}$scope.params=$routeParams,$scope.findOne=function(){$rootScope.currentAddr=$routeParams.addrStr,Address.get({addrStr:$routeParams.addrStr},function(address){$rootScope.titleDetail=address.addrStr.substring(0,7)+"...",$rootScope.flashMessage=null,$scope.address=address,$scope.address.totalReceived=scientificToNumber($scope.address.totalReceived,$scope.address.totalReceivedSat),$scope.address.totalSent=scientificToNumber($scope.address.totalSent,$scope.address.totalSentSat),$scope.address.balance=scientificToNumber($scope.address.balance,$scope.address.balanceSat)},function(e){400===e.status?$rootScope.flashMessage="Invalid Address: "+$routeParams.addrStr:503===e.status?$rootScope.flashMessage="Backend Error. "+e.data:$rootScope.flashMessage="Address Not Found",$location.path("/")})},$rootScope.fsn=!1}),angular.module("insight.blocks").controller("BlocksController",function($scope,$rootScope,$routeParams,$location,Global,Block,Blocks,BlockByHeight){$scope.global=Global,$scope.loading=!1;var timezone=(new Date).getTimezoneOffset()/60;$scope.timezone=timezone,$routeParams.blockHeight&&BlockByHeight.get({blockHeight:$routeParams.blockHeight},function(hash){$location.path("/block/"+hash.blockHash)},function(){$rootScope.flashMessage="Bad Request",$location.path("/")});function transferUTC2Locale(timastamp){return new Date(1e3*timastamp).toLocaleDateString().replace("/","-").replace("/","-")}$scope.$watch("dt",function(newValue,oldValue){var date,yyyy,mm,dd;newValue!==oldValue&&$location.path("/blocks-date/"+(yyyy=(date=newValue).getFullYear().toString(),mm=(date.getMonth()+1).toString(),dd=date.getDate().toString(),yyyy+"-"+(mm[1]?mm:"0"+mm[0])+"-"+(dd[1]?dd:"0"+dd[0]))+"/"+$scope.timezone)}),$scope.openCalendar=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.humanSince=function(time){var m=moment.unix(time).startOf("day"),b=moment().startOf("day");return m.max().from(b)},$scope.list=function(){if($scope.loading=!0,$scope.is_today=!0,$routeParams.blockDate&&($scope.detail="On "+$routeParams.blockDate),$routeParams.startTimestamp){var d=new Date(1e3*$routeParams.startTimestamp),m=d.getMinutes();m<10&&(m="0"+m),$scope.before=" before "+d.getHours()+":"+m}$routeParams.timezone&&($scope.timezone=$routeParams.timezone),$rootScope.titleDetail=$scope.detail,Blocks.get({blockDate:$routeParams.blockDate,startTimestamp:$routeParams.startTimestamp,timezone:$routeParams.timezone},function(res){$scope.loading=!1,$scope.blocks=res.blocks,$scope.pagination=res.pagination;var ts=$scope.pagination.currentTs;$scope.pagination.currentDate=transferUTC2Locale(ts),$scope.pagination.prevDate=transferUTC2Locale(ts-86400),$scope.pagination.nextDate=transferUTC2Locale(ts+86400)})},$scope.findOne=function(){$scope.loading=!0,Block.get({blockHash:$routeParams.blockHash},function(block){$rootScope.titleDetail=block.height,$rootScope.flashMessage=null,$scope.loading=!1,$scope.block=block},function(e){400===e.status?$rootScope.flashMessage="Invalid Transaction ID: "+$routeParams.txId:503===e.status?$rootScope.flashMessage="Backend Error. "+e.data:$rootScope.flashMessage="Block Not Found",$location.path("/")})},$scope.params=$routeParams,$rootScope.fsn=!1}),angular.module("insight.connection").controller("ConnectionController",function($scope,$window,Status,getSocket,PeerSync){$scope.apiOnline=!0,$scope.serverOnline=!0,$scope.clienteOnline=!0}),angular.module("insight.contracts").controller("ContractsController",function($scope,$rootScope,$routeParams,$location,Global,Contracts,Contract){$scope.global=Global,console.log("enter contracts");$scope.list=function(){Contracts.get({pageNum:$routeParams.pageNum},function(res){$scope.contract_list=res.contract_list,$scope.pagination=parseInt(res.pagination),$scope.is_more=res.is_more,1<$routeParams.pageNum?$scope.pageNum=parseInt($routeParams.pageNum):$scope.pageNum=1})},$scope.findOne=function(){Contract.get({contractAddr:$routeParams.contractAddr},function(res){$scope.contract=res.contract})},$rootScope.fsn=!1}),angular.module("insight.currency").controller("CurrencyController",function($scope,$rootScope,Currency){$rootScope.currency.symbol=defaultCurrency;var _roundFloat=function(x,n){return parseInt(n,10)&&parseFloat(x)||(n=0),Math.round(x*Math.pow(10,n))/Math.pow(10,n)};$rootScope.currency.getConvertion=function(value){var response;return value*=1,isNaN(value)||null==value?"value error":0===value?"0 "+this.symbol:("USD"===this.symbol?response=_roundFloat(value*this.factor,2):"mNew"===this.symbol?(this.factor=1e3,response=_roundFloat(value*this.factor,5)):"bits"===this.symbol?(this.factor=1e6,response=_roundFloat(value*this.factor,2)):(this.factor=1,response=_roundFloat(value*this.factor,8)),response<1e-7&&(response=response.toFixed(8)),response+" "+this.symbol)},$scope.setCurrency=function(currency){$rootScope.currency.symbol=currency,localStorage.setItem("insight-currency",currency),"USD"===currency?Currency.get({},function(res){$rootScope.currency.factor=$rootScope.currency.bitstamp=res.data.bitstamp}):$rootScope.currency.factor="mNew"===currency?1e3:"bits"===currency?1e6:1},Currency.get({},function(res){$rootScope.currency.factor=$rootScope.currency.bitstamp=res.data.bitstamp})}),angular.module("insight.system").controller("FooterController",function($scope,$route,$templateCache,gettextCatalog,amMoment,Version){$scope.defaultLanguage=defaultLanguage;$scope.version=void Version.get({},function(res){$scope.version=res.version}),$scope.availableLanguages=[{name:"Deutsch",isoCode:"de_DE"},{name:"English",isoCode:"en"},{name:"Spanish",isoCode:"es"},{name:"Japanese",isoCode:"ja"},{name:"简体中文",isoCode:"zh_CN"}]}),angular.module("insight.system").controller("HeaderController",function($scope,$rootScope,$modal,getSocket,gettextCatalog,amMoment,Global,Block){var cookieValue,search;$scope.global=Global,$rootScope.currency={factor:1,bitstamp:0,symbol:"New"},$scope.menu=[{title:"Blocks",link:"blocks"},{title:"Transactions",link:"transactions"},{title:"Contracts",link:"contracts"},{title:"Status",link:"status"}],$scope.openScannerModal=function(){$modal.open({templateUrl:"scannerModal.html",controller:"ScannerController"})},$scope.setLanguage=function(isoCode){gettextCatalog.currentLanguage=$scope.defaultLanguage=defaultLanguage=isoCode,amMoment.changeLocale(isoCode),localStorage.setItem("insight-language",isoCode);var expires="",value=isoCode,date=new Date;date.setTime(date.getTime()+31536e6),expires="; expires="+date.toUTCString(),document.cookie="language="+value+expires+"; path=/",location.reload()},$scope.dateValue=(cookieValue="",search="language"+"=",0<document.cookie.length?(offset=document.cookie.indexOf(search),-1!=offset&&(offset+=search.length,end=document.cookie.indexOf(";",offset),-1==end&&(end=document.cookie.length),cookieValue=unescape(document.cookie.substring(offset,end))),cookieValue):"zh-CN"==(cookieValue=navigator.language)?"zh_CN":cookieValue),$scope.changeLanguage=function(language_code){$scope.setLanguage(language_code)},$rootScope.isCollapsed=!0,$scope.$on("$viewContentLoaded",function(){alert("1")})});var TRANSACTION_DISPLAYED=10,BLOCKS_DISPLAYED=10;angular.module("insight.system").controller("IndexController",function($scope,$rootScope,Global,getSocket,Blocks,NewTransactions,Brief){$scope.global=Global;var _getBlocks=function(){Blocks.get({limit:BLOCKS_DISPLAYED},function(res){$scope.blocks=res.blocks,$scope.blocksLength=res.length})},_getTransactions=function(){NewTransactions.get({limit:TRANSACTION_DISPLAYED},function(res){$scope.txs=res.txs})},_getBrief=function(){Brief.get({},function(res){$scope.brief=res})};$scope.humanSince=function(time){return moment.unix(time).max().fromNow()},$scope.index=function(){_getBlocks(),_getTransactions(),_getBrief(),setInterval(function(){_getBlocks(),_getTransactions(),_getBrief()},2e4)},$scope.txs=[],$scope.blocks=[],$rootScope.fsn=!1}),angular.module("insight.messages").controller("VerifyMessageController",function($scope,$http,Api){$scope.message={address:"",signature:"",message:""},$scope.verification={status:"unverified",result:null,error:null,address:""},$scope.verifiable=function(){return $scope.message.address&&$scope.message.signature&&$scope.message.message},$scope.verify=function(){$scope.verification.status="loading",$scope.verification.address=$scope.message.address,$http.post(Api.apiPrefix+"/messages/verify",$scope.message).success(function(data,status,headers,config){if("boolean"!=typeof data.result)return $scope.verification.status="error",void($scope.verification.error=null);$scope.verification.status="verified",$scope.verification.result=data.result}).error(function(data,status,headers,config){$scope.verification.status="error",$scope.verification.error=data})};var unverify=function(){$scope.verification.status="unverified"};$scope.$watch("message.address",unverify),$scope.$watch("message.signature",unverify),$scope.$watch("message.message",unverify)}),angular.module("insight.rank").controller("RankController",function($scope,$routeParams,$location,Global,GetRichList,Address){$scope.global=Global,$scope.loading=!0,$scope.getRichList=function(){GetRichList.get({},function(sync){$scope.loading=!1,$scope.sync=sync},function(e){$scope.loading=!1;var err="Could not get sync information"+e.toString();$scope.sync={error:err}})},$scope.getAdress=function(adr){window.location="/address/"+adr}}),angular.module("insight.system").controller("ScannerController",function($scope,$rootScope,$modalInstance,Global){$scope.global=Global;var isMobile={Android:function(){return navigator.userAgent.match(/Android/i)},BlackBerry:function(){return navigator.userAgent.match(/BlackBerry/i)},iOS:function(){return navigator.userAgent.match(/iPhone|iPad|iPod/i)},Opera:function(){return navigator.userAgent.match(/Opera Mini/i)},Windows:function(){return navigator.userAgent.match(/IEMobile/i)},any:function(){return isMobile.Android()||isMobile.BlackBerry()||isMobile.iOS()||isMobile.Opera()||isMobile.Windows()}};navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,window.URL=window.URL||window.webkitURL||window.mozURL||window.msURL,$scope.isMobile=isMobile.any(),$scope.scannerLoading=!1;var video,canvas,context,localMediaStream,$searchInput=angular.element(document.getElementById("search")),_scan=function(evt){if($scope.isMobile){$scope.scannerLoading=!0;var files=evt.target.files;if(1===files.length&&0===files[0].type.indexOf("image/")){var file=files[0],reader=new FileReader;reader.onload=function(e){new MegaPixImage(file).render(canvas,{maxWidth:200,maxHeight:200,orientation:6}),setTimeout(function(){qrcode.width=canvas.width,qrcode.height=canvas.height,qrcode.imagedata=context.getImageData(0,0,qrcode.width,qrcode.height);try{qrcode.decode()}catch(e){alert(e)}},1500)},reader.readAsDataURL(file)}}else{if(localMediaStream){context.drawImage(video,0,0,300,225);try{qrcode.decode()}catch(e){}}setTimeout(_scan,500)}},_successCallback=function(stream){video.src=window.URL&&window.URL.createObjectURL(stream)||stream,localMediaStream=stream,video.play(),setTimeout(_scan,1e3)},_scanStop=function(){$scope.scannerLoading=!1,$modalInstance.close(),$scope.isMobile||(localMediaStream.stop&&localMediaStream.stop(),localMediaStream=null,video.src="")},_videoError=function(err){console.log("Video Error: "+JSON.stringify(err)),_scanStop()};qrcode.callback=function(data){_scanStop();var str=0===data.indexOf("bitcoin:")?data.substring(8):data;console.log("QR code detected: "+str),$searchInput.val(str).triggerHandler("change").triggerHandler("submit")},$scope.cancel=function(){_scanStop()},$modalInstance.opened.then(function(){$rootScope.isCollapsed=!0,setTimeout(function(){canvas=document.getElementById("qr-canvas"),context=canvas.getContext("2d"),$scope.isMobile?document.getElementById("qrcode-camera").addEventListener("change",_scan,!1):(video=document.getElementById("qrcode-scanner-video"),angular.element(video),canvas.width=300,canvas.height=225,context.clearRect(0,0,300,225),navigator.getUserMedia({video:!0},_successCallback,_videoError))},500)})}),angular.module("insight.search").controller("SearchController",function($scope,$routeParams,$location,$timeout,Global,Block,Transaction,Address,BlockByHeight,Contract){$scope.global=Global,$scope.loading=!1;var _badQuery=function(){$scope.badQuery=!0,$timeout(function(){$scope.badQuery=!1},2e3)},_resetSearch=function(){$scope.q="",$scope.loading=!1};$scope.search=function(){var q=$scope.q;$scope.badQuery=!1,$scope.loading=!0,Block.get({blockHash:q},function(){_resetSearch(),$location.path("block/"+q)},function(){Transaction.get({txId:q},function(){_resetSearch(),$location.path("tx/"+q)},function(){Contract.get({contractAddr:q},function(){_resetSearch(),$location.path("contract/"+q)},function(){Address.get({addrStr:q},function(){_resetSearch(),$location.path("address/"+q)},function(){isFinite(q)?BlockByHeight.get({blockHeight:q},function(hash){_resetSearch(),$location.path("/block/"+hash.blockHash)},function(){$scope.loading=!1,_badQuery()}):($scope.loading=!1,_badQuery())})})})})}}),angular.module("insight.status").controller("StatusController",function($scope,$rootScope,$routeParams,$location,Global,Status,Sync){$scope.global=Global,$rootScope.fsn=!1,$scope.getStatus=function(q){Status.get({q:"get"+q},function(d){$scope.loaded=1,angular.extend($scope,d)},function(e){$scope.error="API ERROR: "+e.data})},$scope.humanSince=function(time){return moment.unix(time/1e3).format("YYYY-MM-DD HH:mm")};$scope.getSync=function(){Sync.get({},function(sync){!function(sync){$scope.sync=sync}(sync)},function(e){var err="Could not get sync information"+e.toString();$scope.sync={error:err}})}}),angular.module("insight.transactions").controller("transactionsController",function($scope,$rootScope,$routeParams,$location,Global,Transaction,TransactionsByBlock,TransactionsByAddress,TransactionsByContract,Transaction_list){$scope.global=Global,$scope.loading=!1,$scope.loadedBy=null,$rootScope.fsn=!1;var pageNum=0,pagesTotal=1;var _paginate=function(data){$scope.loading=!1,pagesTotal=data.pagesTotal,pageNum+=1,data.txs.forEach(function(tx){$scope.txs.push(tx)})},_findTx=function(txid){Transaction.get({txId:txid},function(tx){$rootScope.titleDetail=tx.txid.substring(0,7)+"...",$rootScope.flashMessage=null,$scope.tx=tx,$scope.txs.unshift(tx)},function(e){400===e.status?$rootScope.flashMessage="Invalid Transaction ID: "+$routeParams.txId:503===e.status?$rootScope.flashMessage="Backend Error. "+e.data:$rootScope.flashMessage="Transaction Not Found",$location.path("/")})};$scope.findThis=function(){_findTx($routeParams.txId)},$scope.load=function(from){$scope.loadedBy=from,$scope.loadMore()},$scope.loadMore=function(){pageNum<pagesTotal&&!$scope.loading&&($scope.loading=!0,"address"===$scope.loadedBy?TransactionsByAddress.get({address:$routeParams.addrStr,pageNum:pageNum},function(data){_paginate(data)}):"contract"===$scope.loadedBy?TransactionsByContract.get({contract:$routeParams.contractAddr,pageNum:pageNum},function(data){_paginate(data)}):TransactionsByBlock.get({block:$routeParams.blockHash,pageNum:pageNum},function(data){_paginate(data)}))},">"!=$routeParams.v_type&&"<"!=$routeParams.v_type||($scope.from_vin="<"==$routeParams.v_type,$scope.from_vout=">"==$routeParams.v_type,$scope.v_index=parseInt($routeParams.v_index),$scope.itemsExpanded=!0),$scope.txs=[],$scope.$on("tx",function(event,txid){_findTx(txid)});var a=new Date;$scope.timezone=a.getTimezoneOffset()/60;function transferUTC2Locale(timastamp){return new Date(1e3*timastamp).toLocaleDateString().replace("/","-").replace("/","-")}$scope.$watch("dt",function(newValue,oldValue){var date,yyyy,mm,dd;newValue!==oldValue&&$location.path("/transactions-date/"+(yyyy=(date=newValue).getFullYear().toString(),mm=(date.getMonth()+1).toString(),dd=date.getDate().toString(),yyyy+"-"+(mm[1]?mm:"0"+mm[0])+"-"+(dd[1]?dd:"0"+dd[0]))+"/"+$scope.timezone)}),$scope.openCalendar=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.humanSince=function(time){var m=moment.unix(time).startOf("day"),b=moment().startOf("day");return m.max().from(b)},$scope.list=function(){if($scope.loading=!0,$scope.is_today=!0,$routeParams.transDate&&($scope.detail="On "+$routeParams.transDate),$routeParams.startTimestamp){var d=new Date(1e3*$routeParams.startTimestamp),m=d.getMinutes();m<10&&(m="0"+m),$scope.before=" before "+d.getHours()+":"+m}$routeParams.timezone&&($scope.timezone=$routeParams.timezone),$rootScope.titleDetail=$scope.detail,Transaction_list.get({transDate:$routeParams.transDate,startTimestamp:$routeParams.startTimestamp,timezone:$routeParams.timezone},function(res){$scope.loading=!1,$scope.trans=res.trans,$scope.pagination=res.pagination;var ts=$scope.pagination.currentTs;$scope.pagination.currentDate=transferUTC2Locale(ts),$scope.pagination.prevDate=transferUTC2Locale(ts-86400),$scope.pagination.nextDate=transferUTC2Locale(ts+86400)})}}),angular.module("insight.transactions").controller("SendRawTransactionController",function($scope,$http,Api){$scope.transaction="",$scope.status="ready",$scope.txid="",$scope.error=null,$scope.formValid=function(){return!!$scope.transaction},$scope.send=function(){var postData={rawtx:$scope.transaction};$scope.status="loading",$http.post(Api.apiPrefix+"/tx/send",postData).success(function(data,status,headers,config){if("string"!=typeof data.txid)return $scope.status="error",void($scope.error="The transaction was sent but no transaction id was got back");$scope.status="sent",$scope.txid=data.txid}).error(function(data,status,headers,config){$scope.status="error",$scope.error=data||"No error message given (connection error?)"})}}),angular.module("insight.address").factory("Address",function($resource,Api){return $resource(Api.apiPrefix+"/addr/:addrStr/?noTxList=1",{addrStr:"@addStr"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){if(404===res.status)return res}}}})}),angular.module("insight.api").factory("Api",function(){return{apiPrefix:"/api/v1"}}),angular.module("insight.blocks").factory("Block",function($resource,Api){return $resource(Api.apiPrefix+"/block/:blockHash",{blockHash:"@blockHash"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){if(404===res.status)return res}}}})}).factory("Blocks",function($resource,Api){return $resource(Api.apiPrefix+"/blocks")}).factory("BlockByHeight",function($resource,Api){return $resource(Api.apiPrefix+"/block-index/:blockHeight")}),angular.module("insight.contracts").factory("Contracts",function($resource,Api){return $resource(Api.apiPrefix+"/contracts_list")}).factory("Contract",function($resource,Api){return $resource(Api.apiPrefix+"/contract/:contractAddr",{contractAddr:"@contractAddr"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){if(404===res.status)return res}}}})}),angular.module("insight.currency").factory("Currency",function($resource,Api){return $resource(Api.apiPrefix+"/currency")}),angular.module("insight.system").factory("Global",[function(){}]).factory("Version",function($resource,Api){return $resource(Api.apiPrefix+"/version")}),angular.module("insight.rank").factory("GetRichList",function($resource,Api){return $resource(Api.apiPrefix+"/addrs/richest-list")});var ScopedSocket=function(socket,$rootScope){this.socket=socket,this.$rootScope=$rootScope,this.listeners=[]};ScopedSocket.prototype.removeAllListeners=function(opts){opts||(opts={});for(var i=0;i<this.listeners.length;i++){var details=this.listeners[i];opts.skipConnect&&"connect"===details.event||this.socket.removeListener(details.event,details.fn)}this.listeners=[]},ScopedSocket.prototype.on=function(event,callback){var socket=this.socket,$rootScope=this.$rootScope,wrapped_callback=function(){var args=arguments;$rootScope.$apply(function(){callback.apply(socket,args)})};socket.on(event,wrapped_callback),this.listeners.push({event:event,fn:wrapped_callback})},ScopedSocket.prototype.emit=function(event,data,callback){var socket=this.socket,$rootScope=this.$rootScope,args=Array.prototype.slice.call(arguments);args.push(function(){var args=arguments;$rootScope.$apply(function(){callback&&callback.apply(socket,args)})}),socket.emit.apply(socket,args)},angular.module("insight.socket").factory("getSocket",function($rootScope){}),angular.module("insight.status").factory("Status",function($resource,Api){return $resource(Api.apiPrefix+"/status",{q:"@q"})}).factory("Sync",function($resource,Api){return $resource(Api.apiPrefix+"/sync")}).factory("PeerSync",function($resource,Api){return $resource(Api.apiPrefix+"/peer")}).factory("Brief",function($resource,Api){return $resource(Api.apiPrefix+"/brief")}),angular.module("insight.transactions").factory("Transaction",function($resource,Api){return $resource(Api.apiPrefix+"/tx/:txId",{txId:"@txId"},{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){if(404===res.status)return res}}}})}).factory("TransactionsByBlock",function($resource,Api){return $resource(Api.apiPrefix+"/txs",{block:"@block"})}).factory("TransactionsByAddress",function($resource,Api){return $resource(Api.apiPrefix+"/txs",{address:"@address"})}).factory("TransactionsByContract",function($resource,Api){return $resource(Api.apiPrefix+"/txs",{contract:"@contract"})}).factory("Transaction_list",function($resource,Api){return $resource(Api.apiPrefix+"/txs/all")}).factory("Transactions",function($resource,Api){return $resource(Api.apiPrefix+"/txs")}).factory("NewTransactions",function($resource,Api){return $resource(Api.apiPrefix+"/newtx",{get:{method:"GET",interceptor:{response:function(res){return res.data},responseError:function(res){if(404===res.status)return res}}}})});var ZeroClipboard=window.ZeroClipboard;angular.module("insight").directive("scroll",function($window){return function(scope,element,attrs){angular.element($window).bind("scroll",function(){200<=this.pageYOffset?scope.secondaryNavbar=!0:scope.secondaryNavbar=!1,scope.$apply()})}}).directive("whenScrolled",function($window){return{restric:"A",link:function(scope,elm,attr){var pageHeight,clientHeight,scrollPos;$window=angular.element($window);var handler=function(){pageHeight=window.document.documentElement.scrollHeight,clientHeight=window.document.documentElement.clientHeight,scrollPos=window.pageYOffset,pageHeight-(scrollPos+clientHeight)==0&&scope.$apply(attr.whenScrolled)};$window.on("scroll",handler),scope.$on("$destroy",function(){return $window.off("scroll",handler)})}}}).directive("clipCopy",function(){return ZeroClipboard.config({moviePath:"/lib/zeroclipboard/ZeroClipboard.swf",trustedDomains:["*"],allowScriptAccess:"always",forceHandCursor:!0}),{restric:"A",scope:{clipCopy:"=clipCopy"},template:'<div class="tooltip fade right in"><div class="tooltip-arrow"></div><div class="tooltip-inner">Copied!</div></div>',link:function(scope,elm){var clip=new ZeroClipboard(elm);clip.on("load",function(client){var onMousedown=function(client){client.setText(scope.clipCopy)};client.on("mousedown",onMousedown),scope.$on("$destroy",function(){client.off("mousedown",onMousedown)})}),clip.on("noFlash wrongflash",function(){return elm.remove()})}}}).directive("focus",function($timeout){return{scope:{trigger:"@focus"},link:function(scope,element){scope.$watch("trigger",function(value){"true"===value&&$timeout(function(){element[0].focus()})})}}}),angular.module("insight").filter("startFrom",function(){return function(input,start){return start=+start,null!=input&&null!=input?input.slice(start):input}}).filter("split",function(){return function(input,delimiter){delimiter=delimiter||",";if(input)return input.split(delimiter)}}),angular.module("insight").config(function($routeProvider){$routeProvider.when("/block/:blockHash",{templateUrl:"views/block.html",title:"Block "}).when("/block-index/:blockHeight",{controller:"BlocksController",templateUrl:"views/redirect.html"}).when("/tx/send",{templateUrl:"views/transaction_sendraw.html",title:"Broadcast Raw Transaction"}).when("/tx/:txId/:v_type?/:v_index?",{templateUrl:"views/transaction.html",title:"Transaction "}).when("/",{templateUrl:"views/index.html",title:"Home"}).when("/blocks",{templateUrl:"views/block_list.html",title:"Blocks solved Today"}).when("/blocks-date/:blockDate/:timezone/:startTimestamp?",{templateUrl:"views/block_list.html",title:"Blocks solved "}).when("/transactions-date/:transDate/:timezone/:startTimestamp?",{templateUrl:"views/transaction_list.html",title:"Transactions list "}).when("/transactions",{templateUrl:"views/transaction_list.html",title:"Transactions list today"}).when("/address/:addrStr",{templateUrl:"views/address.html",title:"Address "}).when("/status",{templateUrl:"views/status.html",title:"Status"}).when("/addrs/richest-list",{templateUrl:"views/rank.html",title:"rank"}).when("/messages/verify",{templateUrl:"views/messages_verify.html",title:"Verify Message"}).when("/contracts",{templateUrl:"views/contract_list.html",title:"Contracts"}).when("/contracts/:pageNum",{templateUrl:"views/contract_list.html",title:"Contracts"}).when("/contract/:contractAddr",{templateUrl:"views/contract.html",title:"Contract"}).otherwise({templateUrl:"views/404.html",title:"Error"})}),angular.module("insight").config(function($locationProvider){$locationProvider.html5Mode(!0),$locationProvider.hashPrefix("!")}).run(function($rootScope,$route,$location,$routeParams,$anchorScroll,ngProgress,gettextCatalog,amMoment){gettextCatalog.currentLanguage=defaultLanguage,amMoment.changeLocale(defaultLanguage),$rootScope.$on("$routeChangeStart",function(){ngProgress.start()}),$rootScope.$on("$routeChangeSuccess",function(){ngProgress.complete(),$rootScope.titleDetail="",$rootScope.title=$route.current.title,$rootScope.isCollapsed=!0,$rootScope.currentAddr=null,$location.hash($routeParams.scrollTo),$anchorScroll()})}),angular.element(document).ready(function(){}),angular.module("insight").run(["gettextCatalog",function(gettextCatalog){gettextCatalog.setStrings("de_DE",{"404 Page not found :(":"404 Seite nicht gefunden :(",Address:"Adresse","Application Status":"Programmstatus",Block:"Block",Blocks:"Blöcke","Can't connect to bitcoind to get live updates from the p2p network. (Tried connecting to bitcoind at {{host}}:{{port}} and failed.)":"Es ist nicht möglich mit Bitcoind zu verbinden um live Aktualisierungen vom P2P Netzwerk zu erhalten. (Verbindungsversuch zu bitcoind an {{host}}:{{port}} ist fehlgeschlagen.)","Can't connect to insight server. Attempting to reconnect...":"Keine Verbindung zum insight-Server möglich. Es wird versucht die Verbindung neu aufzubauen...","Can't connect to internet. Please, check your connection.":"Keine Verbindung zum Internet möglich, bitte Zugangsdaten prüfen.",Complete:"Vollständig",Confirmations:"Bestätigungen","Connections to other nodes":"Verbindungen zu Nodes","Current Sync Status":"Aktueller Status",Details:"Details","Error!":"Fehler!",Fee:"Gebühr","Final Balance":"Schlussbilanz","Finish Date":"Fertigstellung","Go to home":"Zur Startseite",Height:"Höhe","Included in Block":"Eingefügt in Block","Initial Block Chain Height":"Ursprüngliche Blockchain Höhe",Input:"Eingänge","Latest Blocks":"Letzte Blöcke","Loading Address Information":"Lade Adressinformationen","Loading Block Information":"Lade Blockinformation","Loading Selected Date...":"Lade gewähltes Datum...","Loading Transaction Details":"Lade Transaktionsdetails","Loading Transactions...":"Lade Transaktionen...","Loading...":"Lade...","Next Block":"Nächster Block","No blocks yet.":"Keine Blöcke bisher.","No matching records found!":"Keine passenden Einträge gefunden!","No. Transactions":"Anzahl Transaktionen","Number Of Transactions":"Anzahl der Transaktionen",Output:"Ausgänge","Previous Block":"Letzter Block","Protocol version":"Protokollversion","Received Time":"Eingangszeitpunkt","Redirecting...":"Umleitung...","See all blocks":"Alle Blöcke anzeigen",Size:"Größe","Size (bytes)":"Größe (bytes)","Start Date":"Startdatum",Status:"Status",Summary:"Zusammenfassung","Sync Progress":"Fortschritt","Sync Status":"Syncronisation","Sync Type":"Art der Syncronisation","Synced Blocks":"Syncronisierte Blöcke","There are no transactions involving this address.":"Es gibt keine Transaktionen zu dieser Adressse","Time Offset":"Zeitoffset zu UTC",Timestamp:"Zeitstempel",Today:"Heute",Transaction:"Transaktion",Transactions:"Transaktionen",Unconfirmed:"Unbestätigt","Unconfirmed Transaction!":"Unbestätigte Transaktion!","Unconfirmed Txs Balance":"Unbestätigtes Guthaben",Version:"Version","Waiting for blocks...":"Warte auf Blöcke...","Waiting for transactions...":"Warte auf Transaktionen..."}),gettextCatalog.setStrings("en",{"Unconfirmed Transaction!":"Unconfirmed"}),gettextCatalog.setStrings("es",{"404 Page not found :(":"404 Página no encontrada :(",Address:"Dirección","Application Status":"Estado de la Aplicación",Block:"Bloque",Blocks:"Bloques","Can't connect to bitcoind to get live updates from the p2p network. (Tried connecting to bitcoind at {{host}}:{{port}} and failed.)":"No se pudo conectar a bitcoind para obtener actualizaciones en vivo de la red p2p. (Se intentó conectar a bitcoind de {{host}}:{{port}} y falló.)","Can't connect to insight server. Attempting to reconnect...":"No se pudo conectar al servidor insight. Intentando re-conectar...","Can't connect to internet. Please, check your connection.":"No se pudo conectar a Internet. Por favor, verifique su conexión.",Complete:"Completado",Confirmations:"Confirmaciones","Connections to other nodes":"Conexiones a otros nodos","Current Sync Status":"Actual Estado de Sincronización",Details:"Detalles","Error!":"¡Error!",Fee:"Tasa","Final Balance":"Balance Final","Finish Date":"Fecha Final","Go to home":"Volver al Inicio",Height:"Altura","Included in Block":"Incluido en el Bloque","Initial Block Chain Height":"Altura de la Cadena en Bloque Inicial",Input:"Entrada","Latest Blocks":"Últimos Bloques","Loading Address Information":"Cargando Información de la Dirección","Loading Block Information":"Cargando Información del Bloque","Loading Selected Date...":"Cargando Fecha Seleccionada...","Loading Transaction Details":"Cargando Detalles de la Transacción","Loading Transactions...":"Cargando Transacciones...","Loading...":"Cargando...","Next Block":"Próximo Bloque","No blocks yet.":"No hay bloques aún.","No matching records found!":"¡No se encontraron registros coincidentes!","No. Transactions":"Nro. de Transacciones","Number Of Transactions":"Número de Transacciones",Output:"Salida","Previous Block":"Bloque Anterior","Protocol version":"Versión del protocolo","Received Time":"Hora de Recibido","Redirecting...":"Redireccionando...","See all blocks":"Ver todos los bloques",Size:"Tamaño","Size (bytes)":"Tamaño (bytes)","Start Date":"Fecha de Inicio",Status:"Estado",Summary:"Resumen","Sync Progress":"Proceso de Sincronización","Sync Status":"Estado de Sincronización","Sync Type":"Tipo de Sincronización","Synced Blocks":"Bloques Sincornizados","There are no transactions involving this address.":"No hay transacciones para esta dirección","Time Offset":"Desplazamiento de hora",Timestamp:"Fecha y hora",Today:"Hoy",Transaction:"Transacción",Transactions:"Transacciones",Unconfirmed:"Sin confirmar","Unconfirmed Transaction!":"¡Transacción sin confirmar!","Unconfirmed Txs Balance":"Balance sin confirmar",Version:"Versión","Waiting for blocks...":"Esperando bloques...","Waiting for transactions...":"Esperando transacciones..."}),gettextCatalog.setStrings("ja",{"404 Page not found :(":"404 ページがみつかりません (´・ω・`)",Address:"アドレス","An error occured in the verification process.":"検証過程でエラーが発生しました。","An error occured:<br>{{error}}":"エラーが発生しました:<br>{{error}}","Application Status":"アプリケーションの状態","Bitcoin comes with a way of signing arbitrary messages.":"Bitcoinには任意のメッセージを署名する昨日が備わっています。",Block:"ブロック",BlockHash:"ブロックのハッシュ値",Blocks:"ブロック","Broadcast Raw Transaction":"生のトランザクションを配信","Can't connect to bitcoind to get live updates from the p2p network. (Tried connecting to bitcoind at {{host}}:{{port}} and failed.)":"P2Pネットワークからライブ情報を取得するためにbitcoindへ接続することができませんでした。({{host}}:{{port}} への接続を試みましたが、失敗しました。)","Can't connect to insight server. Attempting to reconnect...":"insight サーバに接続できません。再接続しています...","Can't connect to internet. Please, check your connection.":"インターネットに接続できません。コネクションを確認してください。",Complete:"完了",Confirmations:"検証数","Connections to other nodes":"他ノードへの接続","Current Sync Status":"現在の同期状況",Details:"詳細","Error message:":"エラーメッセージ:","Error!":"エラー！",Fee:"手数料","Final Balance":"最終残高","Finish Date":"終了日時","Go to home":"ホームへ",Hash:"ハッシュ値",Height:"ブロック高","Included in Block":"取り込まれたブロック","Initial Block Chain Height":"起動時のブロック高",Input:"入力","Latest Blocks":"最新のブロック","Latest Transactions":"最新のトランザクション","Loading Address Information":"アドレス情報を読み込んでいます","Loading Block Information":"ブロック情報を読み込んでいます","Loading Selected Date...":"選択されたデータを読み込んでいます...","Loading Transaction Details":"トランザクションの詳細を読み込んでいます","Loading Transactions...":"トランザクションを読み込んでいます...","Loading...":"ロード中...",Message:"メッセージ","Next Block":"次のブロック","No blocks yet.":"ブロックはありません。","No matching records found!":"一致するレコードはありません！","No. Transactions":"トランザクション数","Number Of Transactions":"トランザクション数",Output:"出力","Previous Block":"前のブロック","Protocol version":"プロトコルバージョン","Raw transaction data":"トランザクションの生データ","Raw transaction data must be a valid hexadecimal string.":"生のトランザクションデータは有効な16進数でなければいけません。","Received Time":"受信時刻","Redirecting...":"リダイレクトしています...","See all blocks":"すべてのブロックをみる","Send transaction":"トランザクションを送信",Signature:"署名",Size:"サイズ","Size (bytes)":"サイズ (バイト)","Start Date":"開始日時",Status:"ステータス",Summary:"概要","Sync Progress":"同期の進捗状況","Sync Status":"同期ステータス","Sync Type":"同期タイプ","Synced Blocks":"同期されたブロック数","The message failed to verify.":"メッセージの検証に失敗しました。","The message is verifiably from {{verification.address}}.":"メッセージは{{verification.address}}により検証されました。","There are no transactions involving this address.":"このアドレスに対するトランザクションはありません。","This form can be used to broadcast a raw transaction in hex format over\n        the Bitcoin network.":"このフォームでは、16進数フォーマットの生のトランザクションをBitcoinネットワーク上に配信することができます。","This form can be used to verify that a message comes from\n        a specific Bitcoin address.":"このフォームでは、メッセージが特定のBitcoinアドレスから来たかどうかを検証することができます。","Time Offset":"時間オフセット",Timestamp:"タイムスタンプ",Today:"今日",Transaction:"トランザクション","Transaction succesfully broadcast.<br>Transaction id: {{txid}}":"トランザクションの配信に成功しました。<br>トランザクションID: {{txid}}",Transactions:"トランザクション",Unconfirmed:"未検証","Unconfirmed Transaction!":"未検証のトランザクションです！","Unconfirmed Txs Balance":"未検証トランザクションの残高",Verify:"検証","Verify signed message":"署名済みメッセージを検証",Version:"バージョン","Waiting for blocks...":"ブロックを待っています...","Waiting for transactions...":"トランザクションを待っています..."}),gettextCatalog.setStrings("zh_CN",{"404 Page not found :(":"页面没有找到：（",Address:"地址","An error occured in the verification process.":"验证过程出错.","An error occured:<br>{{error}}":"错误:<br>{{error}}","Application Status":"节点状态",Balance:"余额",Block:"区块","Block,Transaction,Contract,Address":"区块，交易，智能合约，地址",BlockHash:"区块散列值",Blocks:"区块","Broadcast Raw Transaction":"广播交易",Complete:"完成","Confirmations :":"确认数 :","Connections to other nodes":"连接节点","Current Sync Status":"当前同步状态",Details:"详情","Error message:":"错误消息：","Error!":"错误！","Fee :":"交易费 :","Final Balance":"余额","Finish Date":"完成时间","From Address :":"发送地址 :","Go to home":"返回首页",Hash:"散列值",Height:"高度","Included in Block :":"所在区块 :","Initial Block Chain Height":"初始区块链高度",Input:"输入","Latest Blocks":"最新区块","Latest Transactions":"最新交易","Loading Address Information":"加载地址信息","Loading Block Information":"加载区块信息","Loading Selected Date...":"加载选择时间...","Loading Transaction Details":"加载交易详情","Loading Transactions...":"加载交易...","Loading...":"加载中...",Message:"消息",Network:"网络","Newstos node information":"牛顿节点信息","Next Block":"下一区块","Latest blocks from date":"最新","No Rank yet.":"没有排名.","No blocks yet.":"没有区块.","No matching records found!":"没有匹配记录!","No. Transactions":"交易数量","Number Of Transactions":"交易数量",Output:"输出",Percentage:"百分比","Previous Block":"上一区块","Previous blocks from date":"更早","Previous transactions from date":"更早","No transactions yet.":"没有交易","Latest transactions from date":"最新","Protocol version":"协议版本",Rank:"排行","Raw transaction data":"交易数据","Raw transaction data must be a valid hexadecimal string.":"交易数据必须是有效的十六进制字符串.","Received Time :":"交易时间 :","Redirecting...":"跳转中...","See all blocks":"查看全部区块","Send transaction":"发送交易",Signature:"签名",Size:"大小","Size (bytes)":"大小（字节）","Start Date":"开始时间",Status:"节点状态",Summary:"基本信息","Sync Progress":"同步进度","Sync Status":"同步状态","Sync Type":"同步类型","Synced Blocks":"已同步区块","The message failed to verify.":"消息验证失败.","The message is verifiably from {{verification.address}}.":"消息已验证： {{verification.address}}。","There are no transactions.":"无交易信息.","Time Offset":"时差",Timestamp:"时间","To Address :":"接收地址 :",Today:"今天",Transaction:"交易","Transaction ID :":"交易编号 :","Transaction succesfully broadcast.<br>Transaction id: {{txid}}":"交易广播成功.<br>交易Id: {{txid}}",Transactions:"交易",Unconfirmed:"未确认","Unconfirmed Transaction!":"未确认的交易!","Unconfirmed Txs Balance":"未确认交易金额",Validator:"验证节点",Value:"金额","Value :":"金额 :",Verify:"验证","Verify signed message":"验证消息签名",Version:"版本","Waiting for Rank...":"等待排名...","Waiting for blocks...":"等待区块...","Waiting for transactions...":"加载交易...","Transaction Time :":"交易时间 :",Contracts:"智能合约",TxCount:"交易数量",CreatTime:"创建时间",Contract:"智能合约","Create Transaction":"创始交易","Transactions Count":"交易数量",Creator:"创建者","Create Time":"创建时间","To Contract Address :":"智能合约接收地址 :","From Contract Address :":"智能合约发送地址 :","Block Height":"区块高度",Language:"语言","Internal Transaction :":"内部交易 :","Internal Transaction Detail":"内部交易详情","View details":"查看详情"})}]);